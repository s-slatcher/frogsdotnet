[gd_scene load_steps=8 format=3 uid="uid://ppm6co26mk6o"]

[ext_resource type="Script" uid="uid://bxidvtds7dw83" path="res://testing_scenes/terrain_testing/throwback_mesh_gen/ThrowbackMeshGen.cs" id="1_nit4u"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_nit4u"]
sky_horizon_color = Color(0.662243, 0.671743, 0.686743, 1)
ground_horizon_color = Color(0.662243, 0.671743, 0.686743, 1)

[sub_resource type="Sky" id="Sky_c12ng"]
sky_material = SubResource("ProceduralSkyMaterial_nit4u")

[sub_resource type="Environment" id="Environment_jcdht"]
background_mode = 2
sky = SubResource("Sky_c12ng")
tonemap_mode = 2
glow_enabled = true

[sub_resource type="Shader" id="Shader_nit4u"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.4.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

varying float sum;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
	vec3 faceNormColor = CUSTOM0.rgb;
	vec3 norm = (faceNormColor - vec3(0.5)) * 2.;
	float angle = acos(dot(norm, NORMAL));
	float clamp_angle  = clamp(abs(angle), 0, PI/2.);
	float angle_intensity = 1.0 - clamp_angle / (PI/2.);
	
	float edgeSmooth = 0.35;
		VERTEX += NORMAL * (edgeSmooth * angle_intensity);
	
	
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);

	// Vertex Color Use as Albedo: Enabled
	albedo_tex *= COLOR;

	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_c12ng"]
render_priority = 0
shader = SubResource("Shader_nit4u")
shader_parameter/albedo = Color(0.78034, 0.458231, 0.177108, 1)
shader_parameter/albedo_texture_size = Vector2i(0, 0)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="Curve3D" id="Curve3D_nit4u"]
_data = {
"points": PackedVector3Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29.445, 0, 23.8075),
"tilts": PackedFloat32Array(0, 0)
}
point_count = 2

[node name="ThrowbackMeshGen" type="Node3D"]
script = ExtResource("1_nit4u")

[node name="env" type="Node3D" parent="."]

[node name="WorldEnvironment" type="WorldEnvironment" parent="env"]
environment = SubResource("Environment_jcdht")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="env"]
transform = Transform3D(0.976296, 0.149807, -0.156218, 0, 0.72176, 0.692143, 0.21644, -0.675737, 0.704652, 0, 0, 0)
visible = false
light_energy = 0.0
shadow_enabled = true

[node name="OmniLight3D" type="OmniLight3D" parent="env"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.415, 10.04, -0.835)
light_color = Color(0.976949, 1, 0.667423, 1)
light_energy = 1.303
omni_range = 12.878

[node name="Polygon2D" type="Polygon2D" parent="."]
position = Vector2(18, -9)
polygon = PackedVector2Array(-7.67144, -194.109, -7.34399, -286.95, 202.384, -287.449, 202.45, -194.109)
uv = PackedVector2Array(-7.34399, -194.55, -7.34399, -286.95, 203.856, -288.05, 202.756, -201.15)

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
material_override = SubResource("ShaderMaterial_c12ng")

[node name="Path3D" type="Path3D" parent="."]
curve = SubResource("Curve3D_nit4u")
